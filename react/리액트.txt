

<<<<리액트의 3가지 특징>>>>> 

React는 프론트엔드 개발을 위한 자바스크립트 오픈소스 라이브러리 

라이브러리 : 일종의 함수집합, 코드 덩어리

○ 선언형 
코드를 자세히 분석하지 않고도, 코드의 의미가 무엇인지 알 수 있게끔 작성하는 방식.
- 웹 페이지는 선언형인데 웹페이지는 제목, 글꼴, 본문, 그림과 같이 "무엇"이 나타나야하는지를 묘사하는 것이지 "어떤 방법으로" 컴퓨터 화면에 페이지를 나타내야 하는지를 묘사하는 것이 아니기 때문

	-  웹페이지를 위한 개발이 가능함 
○ 컴포넌트 기반 
	- 하나의 기능 구현을 위해 여러가지 코드들을 묶어 놓은 함수 같은 것
	- 독립적이기 때문에 재사용성이 좋음
	- 최상의 root를 가지고 있고, 자식과 형제를 갖는 트리구조

○ 범용성 
- 웹, 데스크탑 뿐만 아니라 모바일에서도 사용이 가능 
==========================


<<<<<JSX규칙>>>>>> 

JSX란?
Jsx는 리액트 엘리먼트를 만들때 사용하는 문법으로, JavaScript 문법과 HTML 문법을 동시에 이용해 CSS, JSX 문법만을 가지고 웹 애플리케이션을 개발가능하게끔 만들어 주며, 이를 통해 기능과 구조를 한눈에 확인할 수 있습니다.

JavaScript를 확장한 문법
JS코드가 아니기 때문에 JS코드로 변환해주어야하는데, 
Babel은 JSX를 브라우저가 이해할 수 있는 JavaScript로 컴파일

======================


<<<<<JSX 문법>>>>>>

1. jSX에서 여러 엘리먼트를 작성하고자 하는 경우, 하나의 엘리먼트가 모든 엘리먼트들을 포함해야함.  최상위에서 opening tag와 closing tag로 감싸주어야 합니다.
	리액트 엘리먼트의 리턴값은 하나의 JSX표현식으로 작성해야하기 때문
	

2. React에서 CSS class 속성을 지정하려면
	 "className"으로 표기해야 합니다.
	
	○ class로 작성하게 된다면 React에서는 이를 html 클래스 속성 대신 자바스크립트 클래스	로 받아들임.
	
3. JSX에서 JavaScript를 쓰고자 한다면, 꼭 중괄호를 이용해야 합니다.

	○ 중괄호를 사용하지 않으면 일반 텍스트로 인식합니다.
		
4. React 엘리먼트가 JSX로 작성되면 "대문자"로 시작해야 함.
	a.  소문자로 시작하게 되면 일반적인 HTML 엘리먼트로 인식을 하게 됩니다. 
	
5. 조건문을 사용하고 자 할때에는 삼항 연산자를 사용해야함.
	- 삼항 연산자를 쓰면 하나의 값이 나오니까 

6. React 에서 여러 개의 HTML 엘리먼트를 표시할 때는 "map()" 함수를 사용합니다.
	"key" JSX 속성을 넣어야 합니다.

	key 속성값은 가능하면 데이터에서 제공하는 id를 할당해야 합니다. key 속성값은 id와 마찬		가지로 변하지 않고, 예상 가능하며, 유일해야 하기 때문


==========================================================


<<<<<SPA란>>>>>

SPA는중복되는 요소들을 매번 불러오는 것이 서버와의 불필요한 트래픽을 발생하는 것을 막기 위해 만드러진 Menu와 Footer와 같이 페이지 전환 전후에 중복되는 부분은 새로 불러오지 않습니다



화면을 업데이트하기 위해 필요한 데이터만 서버에서 전달받아 브라우저에서 해당하는 부분만 업데이트하는 방식으로 작동하는 웹 애플리케이션이나 웹 사이트

=====================================================


<<<<< SPA 장단점 >>>>>
장점 
1. 전체 페이지가 아니라 일부의 필요한 데이터만 받아서 업데이트하기 때문에, 사용자와의 상호작용시에 빠르게 반응한다,
2. 필요한 부분만 업데이트 할 때, 요청받은 데이터만 넘겨주면 되기 때문에 서버 과부하가 걸릴 활률이 줄어듦

단점.
1. SPA를 활용할 때의 JAVASCRIPT파일은 크기가 큽니다. 따라서 랜더링를 하여 데이터를 브라우저에 출력하기까지 시간이 오래걸리기 때무에  첫 화면 로딩시간이 길어짐
2. JSX문법을 사용하기 때문에 HTML이 거의 비어있다 보니 시멘틱한 요소들이 거의 없어서, 검색 로봇이 충분한 자료를 수집하지 못합니다. 따라서 검색 엔진 최적화에 좋지 않습니다.



===================



<<<<<<라우팅>>>>>>

다른 주소에 따라 다른 뷰를 보여주는 과정을 "경로에 따라 변경한다."라는 의미

React Route - 라우팅을 위한 라이브러리 

ROUTER - 라우터 역할 : <BrowserRoute> 

Route Matchers - 경로 매칭 역할 : 
	<Routes> 컴포넌트는 여러 <Route> 컴포넌트를 감싸, 그중 경로가 일치하는 단 하나의 라	우터만 렌더링을 시켜주는 역할을 합니다. <Routes> 를 사용하지 않으면 매칭되는 모든 요	소를 렌더링
 	<Route>
 	path 속성을 지정하여 해당 path 에서 어떤 컴포넌트를 보여줄지 정합니다

Route changers - 경로를 변경하는 역할 : <Link>
. 페이지 전환을 통해 페이지를 새로 불러오지 않고 애플리케이션을 그대로 유지하여 HTML5 History API를 이용해 페이지의 주소만 변경해 줍니다.





















